# -*- coding:utf-8 -*-"""Functions definition to go to item thanks regex compiled"""import sixpad as spfrom .item import *class Goto():    def __init__(self, mul):        self.regex_compiled = mul    # end def        def next_item(self, item_type):        """Go to the next item_type in        return true if item found or false if not        """                # Get current line, note that  first line is 0        line = self.sp.window.curPage.curLin        # First test with next lin        line += 1        # test each line        while line < self.sp.window.curPage.lineCount:            # Fetch text on this line.            line_text = self.sp.window.curPage.line(line)            # test this line with regex            if self.regex_compiled[item_type].match(line_text):                # regex found item, go to this line                self.sp.window.curPage.curLine = line                # say this line heading                 self.sp.say(line_text, True)                return True            # end if            # increment lines counter             line += 1        # end whil        # Item not found, make a bip and return False        self.sp.window.messageBeep(0)        return False    # end def        def previous_item(self, item_type):        """Go to the previous ite        item_type: in        return true if item found or false if not        """                # Get current line, note that line number start from 0.         line = self.sp.window.curPage.curLin        # First test on the previous lin        line -= 1                # test each line        while line >= 0:            # Fetch text of this line            line_text = self.sp.window.curPage.line(line)            # test this line with regex            if self.regex_compiled[item_type].match(line_text):                # regex found item, go to this line                self.sp.window.curPage.curLine = line                                # say this line heading                 self.sp.say(line_text, True)                return True            # end if            # Decrement line number to test previous lin            line -= 1        # end whil        # Item not found, making bip and return False        self.sp.window.messageBeep(0)        return False    # end def# end class